function myFunction(num) {
  if (num > 10) return; // 기저조건 : num이 10보다 크면 탈출
  console.log(num);
  myFunction(num + 1);
}
myFunction(1);
//기저조건(탈출조건)이 없는 함수는 call stack이 꽉찰때까지 작동함

/* 
콜스택(=스택) ?  함수가 호출되면서 올라가는 메모리 영역, 
                 함수 {}내부 실행완료되면 스택에서 지워짐 

재귀 함수의 동작시 콜스택에 매개변수가 새로 호출될때마다 함수가 쌓이고, 
모두 실행완료되면 가장 마지막에 들어온 함수부터 Out되기 때문에 
(반복문을 쓸때보다) 메모리 공간을 많이 차지함

=> for문을 대신해서 재귀함수를 쓰기보다는, => 상향식 계산 접근

   복잡한 문제를 쉽게 바라보기 위해 사용 => 하위 문제를 기반으로 해결하기 => 하향식 계산 접근
   (ex. 팩토리얼 구현)
*/
